{"version":3,"file":"bundle.f2afb5e865a9c70aa7cc.js","mappings":"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","sources":["webpack://webglfilters/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://webglfilters/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webglfilters/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://webglfilters/./src/style.css","webpack://webglfilters/./node_modules/css-loader/dist/runtime/api.js","webpack://webglfilters/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://webglfilters/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://webglfilters/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://webglfilters/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://webglfilters/webpack/bootstrap","webpack://webglfilters/webpack/runtime/compat get default export","webpack://webglfilters/webpack/runtime/define property getters","webpack://webglfilters/webpack/runtime/hasOwnProperty shorthand","webpack://webglfilters/webpack/runtime/nonce","webpack://webglfilters/./src/Palettes/Palette.ts","webpack://webglfilters/./src/Palettes/PaletteParsers.ts","webpack://webglfilters/./src/Palettes/PalletteFactory.ts","webpack://webglfilters/./src/Application/HtmlElements.ts","webpack://webglfilters/./src/Application/FileHandler.ts","webpack://webglfilters/./src/GL/GLHelpers.ts","webpack://webglfilters/./src/Palettes/PaletteElements.ts","webpack://webglfilters/./src/GL/GLShader.ts","webpack://webglfilters/./src/GL/GLManagement.ts","webpack://webglfilters/./src/style.css?7163","webpack://webglfilters/./src/index.ts"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n  --bg: #0b0b0b;\r\n  --fg: #f5f5f5;\r\n  --muted: #a3a3a3;\r\n  --stroke: #333;\r\n  --radius: 10px;\r\n  --gap: 16px;\r\n  color-scheme: dark\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  background: var(--bg);\r\n  color: var(--fg);\r\n  font: 15px/1.6 \"Courier New\", Courier, monospace\r\n}\r\n\r\n/* Layout */\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  gap: 24px;\r\n  align-items: start;\r\n  padding: 16px\r\n}\r\n\r\n.container>* {\r\n  min-width: 0\r\n}\r\n\r\n/* prevent grid blowout */\r\n@media (max-width:900px) {\r\n  .container {\r\n    grid-template-columns: 1fr\r\n  }\r\n}\r\n\r\n.sidebar {\r\n  display: grid;\r\n  gap: 14px;\r\n  align-content: start\r\n}\r\n\r\n.preview {\r\n  min-width: 0\r\n}\r\n\r\n/* Shared surface */\r\n.controls,\r\n.status,\r\n.col,\r\n.log,\r\nimg,\r\ncanvas,\r\na {\r\n  border: 1px solid var(--stroke);\r\n  border-radius: var(--radius)\r\n}\r\n\r\nimg,\r\ncanvas {\r\n  display: block;\r\n  width: 100%;\r\n  height: auto;\r\n  background: var(--bg);\r\n  max-height: 85vh;\r\n  object-fit: contain\r\n}\r\n\r\n/* Header */\r\n.page-header {\r\n  display: grid;\r\n  gap: 6px\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0;\r\n  font-size: clamp(1.1rem, 1rem + 1vw, 1.6rem);\r\n  font-weight: 700\r\n}\r\n\r\n.subtitle {\r\n  margin: 0;\r\n  color: var(--muted);\r\n  font-size: .95rem\r\n}\r\n\r\n/* Controls */\r\n.controls {\r\n  display: grid;\r\n  gap: 12px;\r\n  padding: 12px;\r\n  background: rgba(255, 255, 255, .02);\r\n  grid-auto-rows: min-content\r\n}\r\n\r\n.control {\r\n  display: grid;\r\n  gap: 6px\r\n}\r\n\r\n.label {\r\n  font-size: .85rem;\r\n  color: var(--muted)\r\n}\r\n\r\ninput[type=file],\r\nselect,\r\nbutton,\r\na {\r\n  background: transparent;\r\n  color: var(--fg);\r\n  font-size: 14px;\r\n  padding: 10px 12px;\r\n  border: 1px solid var(--stroke);\r\n  border-radius: var(--radius);\r\n  max-width: 100%\r\n}\r\n\r\nbutton {\r\n  cursor: pointer\r\n}\r\n\r\nbutton:hover:not(:disabled),\r\na:hover {\r\n  background: var(--fg);\r\n  color: var(--bg)\r\n}\r\n\r\nbutton:disabled {\r\n  opacity: .6;\r\n  cursor: not-allowed\r\n}\r\n\r\n/* File input: truncate long filenames */\r\n/* Replace your file input block with this minimal set */\r\ninput[type=file] {\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 0;\r\n  white-space: nowrap;\r\n  overflow: hidden\r\n}\r\n\r\ninput[type=file]:hover,\r\ninput[type=file]:focus {\r\n  overflow: auto\r\n}\r\n\r\n/* reveals full name via horizontal scroll */\r\n\r\ninput[type=file]::file-selector-button,\r\ninput[type=file]::-webkit-file-upload-button {\r\n  margin-right: 8px;\r\n  padding: 8px 10px;\r\n  border: 1px solid var(--stroke);\r\n  border-radius: var(--radius);\r\n  background: rgba(255, 255, 255, .06);\r\n  color: var(--fg);\r\n  cursor: pointer\r\n}\r\n\r\n\r\n/* Select (dark popup) */\r\nselect {\r\n  background: #111;\r\n  color: var(--fg);\r\n  color-scheme: dark;\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  white-space: nowrap\r\n}\r\n\r\nselect option,\r\nselect optgroup {\r\n  background: #111;\r\n  color: var(--fg)\r\n}\r\n\r\nselect:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(255, 255, 255, .08) inset\r\n}\r\n\r\n/* Status + log */\r\n.status {\r\n  padding: 10px 12px;\r\n  background: rgba(255, 255, 255, .04)\r\n}\r\n\r\n.log {\r\n  white-space: pre-wrap;\r\n  font-size: .9rem;\r\n  padding: 8px 10px;\r\n  display: none\r\n}\r\n\r\n.log:not(:empty) {\r\n  display: block\r\n}\r\n\r\n/* Preview area */\r\n.row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: var(--gap);\r\n  align-items: start\r\n}\r\n\r\n@media (max-width:900px) {\r\n  .row {\r\n    grid-template-columns: 1fr\r\n  }\r\n}\r\n\r\n.col {\r\n  display: grid;\r\n  gap: 12px;\r\n  padding: 12px;\r\n  background: rgba(255, 255, 255, .02)\r\n}\r\n\r\n.col h3 {\r\n  margin: 0;\r\n  font-weight: 700;\r\n  font-size: 1rem\r\n}\r\n\r\n/* Utils */\r\na {\r\n  text-decoration: none;\r\n  display: inline-block\r\n}\r\n\r\n.hidden {\r\n  display: none !important\r\n}\r\n\r\n/* ===== Compact Palette Board ===== */\r\n:root{\r\n  --pv-tile: 32px;   /* size of each square */\r\n  --pv-gap: 8px;     /* spacing between squares */\r\n  --pv-cols: 8;      /* default columns; change per container if desired */\r\n}\r\n\r\n/* Scope the board with data-palette and .pv-compact */\r\n[data-palette].pv-compact {\r\n  /* allow grid to be only as wide as its content (so it doesn't fill the row) */\r\n  display: block;\r\n  width: max-content;\r\n  max-width: 100%;    /* prevent overflow on tiny viewports */\r\n  overflow: hidden;   /* clip if needed */\r\n  padding: 6px;       /* optional inner padding to match your box drawing */\r\n  border-radius: var(--radius);\r\n  border: 1px solid var(--stroke);\r\n  background: transparent;\r\n}\r\n\r\n[data-palette].pv-compact .pv-grid{\r\n  display: inline-grid;                                  /* grid sizes to content */\r\n  grid-template-columns: repeat(var(--pv-cols), var(--pv-tile));\r\n  grid-auto-rows: var(--pv-tile);\r\n  gap: var(--pv-gap);\r\n  justify-content: start;                                /* leftover space stays on right */\r\n  align-content: start;\r\n}\r\n\r\n[data-palette].pv-compact .pv-item{\r\n  width: var(--pv-tile);\r\n  height: var(--pv-tile);\r\n  border-radius: 4px;\r\n  border: 1px solid var(--stroke);\r\n  padding: 0;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  transition: transform .06s ease, box-shadow .06s ease;\r\n}\r\n\r\n[data-palette].pv-compact .pv-item:hover{\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 6px rgba(0,0,0,.25);\r\n}\r\n\r\n[data-palette].pv-compact .pv-item:focus-visible{\r\n  outline: 2px solid #4C9AFF;\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* we only show the swatch; hide any labels if present */\r\n[data-palette].pv-compact .pv-labels,\r\n[data-palette].pv-compact .pv-name,\r\n[data-palette].pv-compact .pv-rgba,\r\n[data-palette].pv-compact .pv-title { display: none !important; }\r\n\r\n\r\n/* Small screens: allow smaller min width before wrapping */\r\n@media (max-width: 700px) {\r\n  [data-palette] .pv-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  }\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\r\\n  --bg: #0b0b0b;\\r\\n  --fg: #f5f5f5;\\r\\n  --muted: #a3a3a3;\\r\\n  --stroke: #333;\\r\\n  --radius: 10px;\\r\\n  --gap: 16px;\\r\\n  color-scheme: dark\\r\\n}\\r\\n\\r\\n*,\\r\\n*::before,\\r\\n*::after {\\r\\n  box-sizing: border-box\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  height: 100%\\r\\n}\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n  background: var(--bg);\\r\\n  color: var(--fg);\\r\\n  font: 15px/1.6 \\\"Courier New\\\", Courier, monospace\\r\\n}\\r\\n\\r\\n/* Layout */\\r\\n.container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 340px 1fr;\\r\\n  gap: 24px;\\r\\n  align-items: start;\\r\\n  padding: 16px\\r\\n}\\r\\n\\r\\n.container>* {\\r\\n  min-width: 0\\r\\n}\\r\\n\\r\\n/* prevent grid blowout */\\r\\n@media (max-width:900px) {\\r\\n  .container {\\r\\n    grid-template-columns: 1fr\\r\\n  }\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  display: grid;\\r\\n  gap: 14px;\\r\\n  align-content: start\\r\\n}\\r\\n\\r\\n.preview {\\r\\n  min-width: 0\\r\\n}\\r\\n\\r\\n/* Shared surface */\\r\\n.controls,\\r\\n.status,\\r\\n.col,\\r\\n.log,\\r\\nimg,\\r\\ncanvas,\\r\\na {\\r\\n  border: 1px solid var(--stroke);\\r\\n  border-radius: var(--radius)\\r\\n}\\r\\n\\r\\nimg,\\r\\ncanvas {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  height: auto;\\r\\n  background: var(--bg);\\r\\n  max-height: 85vh;\\r\\n  object-fit: contain\\r\\n}\\r\\n\\r\\n/* Header */\\r\\n.page-header {\\r\\n  display: grid;\\r\\n  gap: 6px\\r\\n}\\r\\n\\r\\n.page-header h1 {\\r\\n  margin: 0;\\r\\n  font-size: clamp(1.1rem, 1rem + 1vw, 1.6rem);\\r\\n  font-weight: 700\\r\\n}\\r\\n\\r\\n.subtitle {\\r\\n  margin: 0;\\r\\n  color: var(--muted);\\r\\n  font-size: .95rem\\r\\n}\\r\\n\\r\\n/* Controls */\\r\\n.controls {\\r\\n  display: grid;\\r\\n  gap: 12px;\\r\\n  padding: 12px;\\r\\n  background: rgba(255, 255, 255, .02);\\r\\n  grid-auto-rows: min-content\\r\\n}\\r\\n\\r\\n.control {\\r\\n  display: grid;\\r\\n  gap: 6px\\r\\n}\\r\\n\\r\\n.label {\\r\\n  font-size: .85rem;\\r\\n  color: var(--muted)\\r\\n}\\r\\n\\r\\ninput[type=file],\\r\\nselect,\\r\\nbutton,\\r\\na {\\r\\n  background: transparent;\\r\\n  color: var(--fg);\\r\\n  font-size: 14px;\\r\\n  padding: 10px 12px;\\r\\n  border: 1px solid var(--stroke);\\r\\n  border-radius: var(--radius);\\r\\n  max-width: 100%\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  cursor: pointer\\r\\n}\\r\\n\\r\\nbutton:hover:not(:disabled),\\r\\na:hover {\\r\\n  background: var(--fg);\\r\\n  color: var(--bg)\\r\\n}\\r\\n\\r\\nbutton:disabled {\\r\\n  opacity: .6;\\r\\n  cursor: not-allowed\\r\\n}\\r\\n\\r\\n/* File input: truncate long filenames */\\r\\n/* Replace your file input block with this minimal set */\\r\\ninput[type=file] {\\r\\n  width: 100%;\\r\\n  max-width: 100%;\\r\\n  min-width: 0;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden\\r\\n}\\r\\n\\r\\ninput[type=file]:hover,\\r\\ninput[type=file]:focus {\\r\\n  overflow: auto\\r\\n}\\r\\n\\r\\n/* reveals full name via horizontal scroll */\\r\\n\\r\\ninput[type=file]::file-selector-button,\\r\\ninput[type=file]::-webkit-file-upload-button {\\r\\n  margin-right: 8px;\\r\\n  padding: 8px 10px;\\r\\n  border: 1px solid var(--stroke);\\r\\n  border-radius: var(--radius);\\r\\n  background: rgba(255, 255, 255, .06);\\r\\n  color: var(--fg);\\r\\n  cursor: pointer\\r\\n}\\r\\n\\r\\n\\r\\n/* Select (dark popup) */\\r\\nselect {\\r\\n  background: #111;\\r\\n  color: var(--fg);\\r\\n  color-scheme: dark;\\r\\n  appearance: none;\\r\\n  -webkit-appearance: none;\\r\\n  -moz-appearance: none;\\r\\n  white-space: nowrap\\r\\n}\\r\\n\\r\\nselect option,\\r\\nselect optgroup {\\r\\n  background: #111;\\r\\n  color: var(--fg)\\r\\n}\\r\\n\\r\\nselect:focus {\\r\\n  outline: none;\\r\\n  box-shadow: 0 0 0 2px rgba(255, 255, 255, .08) inset\\r\\n}\\r\\n\\r\\n/* Status + log */\\r\\n.status {\\r\\n  padding: 10px 12px;\\r\\n  background: rgba(255, 255, 255, .04)\\r\\n}\\r\\n\\r\\n.log {\\r\\n  white-space: pre-wrap;\\r\\n  font-size: .9rem;\\r\\n  padding: 8px 10px;\\r\\n  display: none\\r\\n}\\r\\n\\r\\n.log:not(:empty) {\\r\\n  display: block\\r\\n}\\r\\n\\r\\n/* Preview area */\\r\\n.row {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  gap: var(--gap);\\r\\n  align-items: start\\r\\n}\\r\\n\\r\\n@media (max-width:900px) {\\r\\n  .row {\\r\\n    grid-template-columns: 1fr\\r\\n  }\\r\\n}\\r\\n\\r\\n.col {\\r\\n  display: grid;\\r\\n  gap: 12px;\\r\\n  padding: 12px;\\r\\n  background: rgba(255, 255, 255, .02)\\r\\n}\\r\\n\\r\\n.col h3 {\\r\\n  margin: 0;\\r\\n  font-weight: 700;\\r\\n  font-size: 1rem\\r\\n}\\r\\n\\r\\n/* Utils */\\r\\na {\\r\\n  text-decoration: none;\\r\\n  display: inline-block\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n  display: none !important\\r\\n}\\r\\n\\r\\n/* ===== Compact Palette Board ===== */\\r\\n:root{\\r\\n  --pv-tile: 32px;   /* size of each square */\\r\\n  --pv-gap: 8px;     /* spacing between squares */\\r\\n  --pv-cols: 8;      /* default columns; change per container if desired */\\r\\n}\\r\\n\\r\\n/* Scope the board with data-palette and .pv-compact */\\r\\n[data-palette].pv-compact {\\r\\n  /* allow grid to be only as wide as its content (so it doesn't fill the row) */\\r\\n  display: block;\\r\\n  width: max-content;\\r\\n  max-width: 100%;    /* prevent overflow on tiny viewports */\\r\\n  overflow: hidden;   /* clip if needed */\\r\\n  padding: 6px;       /* optional inner padding to match your box drawing */\\r\\n  border-radius: var(--radius);\\r\\n  border: 1px solid var(--stroke);\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n[data-palette].pv-compact .pv-grid{\\r\\n  display: inline-grid;                                  /* grid sizes to content */\\r\\n  grid-template-columns: repeat(var(--pv-cols), var(--pv-tile));\\r\\n  grid-auto-rows: var(--pv-tile);\\r\\n  gap: var(--pv-gap);\\r\\n  justify-content: start;                                /* leftover space stays on right */\\r\\n  align-content: start;\\r\\n}\\r\\n\\r\\n[data-palette].pv-compact .pv-item{\\r\\n  width: var(--pv-tile);\\r\\n  height: var(--pv-tile);\\r\\n  border-radius: 4px;\\r\\n  border: 1px solid var(--stroke);\\r\\n  padding: 0;\\r\\n  background: transparent;\\r\\n  cursor: pointer;\\r\\n  transition: transform .06s ease, box-shadow .06s ease;\\r\\n}\\r\\n\\r\\n[data-palette].pv-compact .pv-item:hover{\\r\\n  transform: translateY(-1px);\\r\\n  box-shadow: 0 2px 6px rgba(0,0,0,.25);\\r\\n}\\r\\n\\r\\n[data-palette].pv-compact .pv-item:focus-visible{\\r\\n  outline: 2px solid #4C9AFF;\\r\\n  outline-offset: 2px;\\r\\n}\\r\\n\\r\\n/* we only show the swatch; hide any labels if present */\\r\\n[data-palette].pv-compact .pv-labels,\\r\\n[data-palette].pv-compact .pv-name,\\r\\n[data-palette].pv-compact .pv-rgba,\\r\\n[data-palette].pv-compact .pv-title { display: none !important; }\\r\\n\\r\\n\\r\\n/* Small screens: allow smaller min width before wrapping */\\r\\n@media (max-width: 700px) {\\r\\n  [data-palette] .pv-grid {\\r\\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","// I might as well define it in here.. for ease of use.. \r\nexport const defaultPalette = `{\r\n\"paletteName\": \"Wplace Palette\",\r\n  \"entries\": [\r\n        { \"name\": \"BLACK\", \"rgba\": [0, 0, 0, 255] },\r\n        { \"name\": \"DARK_GRAY\", \"rgba\": [60, 60, 60, 255] },\r\n        { \"name\": \"GRAY\", \"rgba\": [120, 120, 120, 255] },\r\n        { \"name\": \"MEDIUM_GRAY\", \"rgba\": [170, 170, 170, 255] },\r\n        { \"name\": \"LIGHT_GRAY\", \"rgba\": [210, 210, 210, 255] },\r\n        { \"name\": \"WHITE\", \"rgba\": [255, 255, 255, 255] },\r\n        { \"name\": \"DEEP_RED\", \"rgba\": [96, 0, 24, 255] },\r\n        { \"name\": \"DARK_RED\", \"rgba\": [165, 14, 30, 255] },\r\n        { \"name\": \"RED\", \"rgba\": [237, 28, 36, 255] },\r\n        { \"name\": \"LIGHT_RED\", \"rgba\": [250, 128, 114, 255] },\r\n        { \"name\": \"DARK_ORANGE\", \"rgba\": [228, 92, 26, 255] },\r\n        { \"name\": \"ORANGE\", \"rgba\": [255, 127, 39, 255] },\r\n        { \"name\": \"GOLD\", \"rgba\": [246, 170, 9, 255] },\r\n        { \"name\": \"YELLOW\", \"rgba\": [249, 221, 59, 255] },\r\n        { \"name\": \"LIGHT_YELLOW\", \"rgba\": [255, 250, 188, 255] },\r\n        { \"name\": \"DARK_GOLDENROD\", \"rgba\": [156, 132, 49, 255] },\r\n        { \"name\": \"GOLDENROD\", \"rgba\": [197, 173, 49, 255] },\r\n        { \"name\": \"LIGHT_GOLDENROD\", \"rgba\": [232, 212, 95, 255] },\r\n        { \"name\": \"DARK_OLIVE\", \"rgba\": [74, 107, 58, 255] },\r\n        { \"name\": \"OLIVE\", \"rgba\": [90, 148, 74, 255] },\r\n        { \"name\": \"LIGHT_OLIVE\", \"rgba\": [132, 197, 115, 255] },\r\n        { \"name\": \"DARK_GREEN\", \"rgba\": [14, 185, 104, 255] },\r\n        { \"name\": \"GREEN\", \"rgba\": [19, 230, 123, 255] },\r\n        { \"name\": \"LIGHT_GREEN\", \"rgba\": [135, 255, 94, 255] },\r\n        { \"name\": \"DARK_TEAL\", \"rgba\": [12, 129, 110, 255] },\r\n        { \"name\": \"TEAL\", \"rgba\": [16, 174, 166, 255] },\r\n        { \"name\": \"LIGHT_TEAL\", \"rgba\": [19, 225, 190, 255] },\r\n        { \"name\": \"DARK_CYAN\", \"rgba\": [15, 121, 159, 255] },\r\n        { \"name\": \"CYAN\", \"rgba\": [96, 247, 242, 255] },\r\n        { \"name\": \"LIGHT_CYAN\", \"rgba\": [187, 250, 242, 255] },\r\n        { \"name\": \"DARK_BLUE\", \"rgba\": [40, 80, 158, 255] },\r\n        { \"name\": \"BLUE\", \"rgba\": [64, 147, 228, 255] },\r\n        { \"name\": \"LIGHT_BLUE\", \"rgba\": [125, 199, 255, 255] },\r\n        { \"name\": \"DARK_INDIGO\", \"rgba\": [77, 49, 184, 255] },\r\n        { \"name\": \"INDIGO\", \"rgba\": [107, 80, 246, 255] },\r\n        { \"name\": \"LIGHT_INDIGO\", \"rgba\": [153, 177, 251, 255] },\r\n        { \"name\": \"DARK_SLATE_BLUE\", \"rgba\": [74, 66, 132, 255] },\r\n        { \"name\": \"SLATE_BLUE\", \"rgba\": [122, 113, 196, 255] },\r\n        { \"name\": \"LIGHT_SLATE_BLUE\", \"rgba\": [181, 174, 241, 255] },\r\n        { \"name\": \"DARK_PURPLE\", \"rgba\": [120, 12, 153, 255] },\r\n        { \"name\": \"PURPLE\", \"rgba\": [170, 56, 185, 255] },\r\n        { \"name\": \"LIGHT_PURPLE\", \"rgba\": [224, 159, 249, 255] },\r\n        { \"name\": \"DARK_PINK\", \"rgba\": [203, 0, 122, 255] },\r\n        { \"name\": \"PINK\", \"rgba\": [236, 31, 128, 255] },\r\n        { \"name\": \"LIGHT_PINK\", \"rgba\": [243, 141, 169, 255] },\r\n        { \"name\": \"DARK_PEACH\", \"rgba\": [155, 82, 73, 255] },\r\n        { \"name\": \"PEACH\", \"rgba\": [209, 128, 120, 255] },\r\n        { \"name\": \"LIGHT_PEACH\", \"rgba\": [250, 182, 164, 255] },\r\n        { \"name\": \"DARK_BROWN\", \"rgba\": [104, 70, 52, 255] },\r\n        { \"name\": \"BROWN\", \"rgba\": [149, 104, 42, 255] },\r\n        { \"name\": \"LIGHT_BROWN\", \"rgba\": [219, 164, 99, 255] },\r\n        { \"name\": \"DARK_TAN\", \"rgba\": [123, 99, 82, 255] },\r\n        { \"name\": \"TAN\", \"rgba\": [156, 132, 107, 255] },\r\n        { \"name\": \"LIGHT_TAN\", \"rgba\": [214, 181, 148, 255] },\r\n        { \"name\": \"DARK_BEIGE\", \"rgba\": [209, 128, 81, 255] },\r\n        { \"name\": \"BEIGE\", \"rgba\": [248, 178, 119, 255] },\r\n        { \"name\": \"LIGHT_BEIGE\", \"rgba\": [255, 197, 165, 255] },\r\n        { \"name\": \"DARK_STONE\", \"rgba\": [109, 100, 63, 255] },\r\n        { \"name\": \"STONE\", \"rgba\": [148, 140, 107, 255] },\r\n        { \"name\": \"LIGHT_STONE\", \"rgba\": [205, 197, 158, 255] },\r\n        { \"name\": \"DARK_SLATE\", \"rgba\": [51, 57, 65, 255] },\r\n        { \"name\": \"SLATE\", \"rgba\": [109, 117, 141, 255] },\r\n        { \"name\": \"LIGHT_SLATE\", \"rgba\": [179, 185, 209, 255] },\r\n        { \"name\": \"TRANSPARENT\", \"rgba\": [0, 0, 0, 0] }\r\n    ]\r\n}`;\r\n\r\n// Just defining a struct to hold our palettes. \r\nexport type RGBA = [number, number, number, number];\r\nexport interface Palette {\r\n    name: string;\r\n    names: string[];\r\n    rgba: RGBA[];\r\n    buffer: Uint8Array;\r\n    size: number;\r\n    paletteSlot?: number;\r\n}\r\n\r\n// The empty palette for returning empties\r\nexport const EmptyPalette: Palette = {\r\n    name: \"\",\r\n    names: [],\r\n    rgba: [],\r\n    buffer: new Uint8Array([]),\r\n    size: 0,\r\n};\r\n\r\n// Checking for empties\r\nexport const CheckEmptyPalette = (p: Palette): boolean =>\r\n    p.name === \"\" && p.names.length === 0 && p.rgba.length === 0 &&\r\n    p.buffer.length === 0 && p.size === 0;","import { ImageFileResult, TextFileResult } from \"../Application/FileHandler\";\r\nimport { HTMLElements } from \"../Application/HtmlElements\";\r\nimport { EmptyPalette, Palette, RGBA } from \"./Palette\";\r\n\r\nexport type FileResult = TextFileResult | ImageFileResult;\r\nexport type Parser = (result: FileResult, html: HTMLElements) => Palette\r\n\r\n// Interface:\r\n// intermediate type for palette\r\ninterface PaletteEntry {\r\n    name: string\r\n    rgba: RGBA;\r\n}\r\n\r\n// Helpers:\r\n// Checks if the value is a Uint8\r\nconst isUint8 = (v: unknown): v is number =>\r\n    Number.isInteger(v) && (v as number) >= 0 && (v as number) <= 255;\r\n\r\n// Checks if the value is a RGBA\r\nconst isRGBA = (x: unknown): x is RGBA =>\r\n    Array.isArray(x) && x.length === 4 && x.every(isUint8);\r\n\r\nconst createBuffer = (rgba: RGBA, buff: Uint8Array, idx: number): Uint8Array => {\r\n    const stride = idx * 4;\r\n    buff[stride + 0] = rgba[0];\r\n    buff[stride + 1] = rgba[1];\r\n    buff[stride + 2] = rgba[2];\r\n    buff[stride + 3] = rgba[3];\r\n    return buff;\r\n}\r\n\r\n// Type check for imageFileResult\r\nexport const isImageFileResult = (v: FileResult): v is ImageFileResult =>\r\n    v != null &&\r\n    typeof v === \"object\" &&\r\n    \"imageBitMap\" in v;\r\n\r\n// Type check for textFileResult\r\nexport const isTextFileResult = (v: FileResult): v is TextFileResult =>\r\n    v != null &&\r\n    typeof v === \"object\" &&\r\n    \"fileString\" in v;\r\n\r\n// Classes: \r\nexport class PaletteParsers {\r\n    // Private Methods\r\n    private JSONParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@JSONParser : A image result was passed, This should not happen.\");\r\n        const res = result as TextFileResult;\r\n        let raw: any;\r\n        let paletteName: string = \"\";\r\n\r\n        // Attempt to parse\r\n        try {\r\n            raw = JSON.parse(res.fileString);\r\n        } catch (e: any) {\r\n            html.ErrorCallBack(\"@JSONParser : JSON is invalid\");\r\n        }\r\n\r\n        // Validate JSON\r\n        if (typeof raw !== \"object\" || raw === null)\r\n            html.ErrorCallBack(\"@JSONParser : JSON must be an object with paletteName and entries\");\r\n        if (!raw.paletteName) paletteName = res.fileName;\r\n        else paletteName = raw.paletteName;\r\n        if (raw.paletteName && typeof raw.paletteName !== \"string\")\r\n            html.ErrorCallBack(\"@JSONParser : paletteName must be a string\");\r\n        if (!raw.entries)\r\n            html.ErrorCallBack(\"@JSONParser : Palette must have entries\");\r\n        if (!Array.isArray(raw.entries))\r\n            html.ErrorCallBack(\"@JSONParser : entries must be an array\");\r\n        if (raw.entries.length === 0)\r\n            html.ErrorCallBack(\"@JSONParser : entries array is empty\");\r\n\r\n        // Build the Palette\r\n        const entries: PaletteEntry[] = raw.entries as PaletteEntry[];\r\n        const size = entries.length;\r\n        const names: string[] = new Array(size);\r\n        const rgba: RGBA[] = new Array(size);\r\n        let buffer: Uint8Array = new Uint8Array(size * 4);\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            const entry = entries[i];\r\n            names[i] = entry.name;\r\n            const rgbaCheck = entry.rgba;\r\n            if (!isRGBA(rgbaCheck)) html.ErrorCallBack(\"@JSONParser : entry is not a RGBA value\");\r\n            rgba[i] = rgbaCheck as RGBA\r\n            buffer = createBuffer(rgba[i], buffer, i);\r\n        }\r\n\r\n        return { name: paletteName, names, rgba, buffer, size };\r\n    };\r\n\r\n    private ASEParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@ASEParser : A image result was passed, This should not happen.\");\r\n        const res = result as TextFileResult;\r\n\r\n\r\n\r\n        // This seems like a issue bounty for github, because I don't have the time to do it \r\n        // TODO:\r\n        html.ErrorCallBack(\"@ASEParser : This code is incomplete.. We cannot parse .ASE files yet, please export to another format\");\r\n\r\n        return EmptyPalette;\r\n    }\r\n\r\n    private HEXParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@HEXParser : An image result was passed. This should not happen.\");\r\n\r\n        const res = result as TextFileResult;\r\n\r\n        // Split into lines and normalize\r\n        const lines = res.fileString\r\n            .trim()\r\n            .split(/\\r?\\n/)\r\n            .map(l => l.trim())\r\n            .filter(l => l.length > 0 && !l.startsWith(\";\") && !l.startsWith(\"//\"));\r\n\r\n        const hex6 = /^#?[0-9a-fA-F]{6}$/;\r\n\r\n        const hexColors = lines.filter(l => hex6.test(l));\r\n        if (hexColors.length === 0)\r\n            html.ErrorCallBack(\"@HEXParser : No valid hex color entries found (expected RRGGBB or #RRGGBB).\");\r\n\r\n        const size = hexColors.length;\r\n        const rgba: RGBA[] = new Array(size);\r\n        let buffer: Uint8Array = new Uint8Array(size * 4);\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            const token = hexColors[i].replace(/^#/, \"\");\r\n            const r = parseInt(token.slice(0, 2), 16);\r\n            const g = parseInt(token.slice(2, 4), 16);\r\n            const b = parseInt(token.slice(4, 6), 16);\r\n            const a = 255;\r\n\r\n            const rgbaCheck = [r, g, b, a];\r\n            if (!isRGBA(rgbaCheck)) html.ErrorCallBack(`@HEXParser : Entry ${i} is not a valid RGBA value.`);\r\n            rgba[i] = rgbaCheck as RGBA;\r\n            buffer = createBuffer(rgba[i], buffer, i);\r\n        }\r\n\r\n        const name = result.fileName.split(\".\")[0];\r\n\r\n        return { name, names: [], rgba, buffer, size };\r\n    }\r\n\r\n    private IMGParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@IMGParser : A image result was passed, This should not happen.\");\r\n        const res = result as TextFileResult;\r\n        // This seems like a issue bounty for github, because I don't have the time to do it \r\n        // TODO: \r\n        return EmptyPalette;\r\n    }\r\n\r\n    private PaintParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@PaintParser : An image result was passed. This should not happen.\");\r\n        const res = result as TextFileResult;\r\n        const rawLines = res.fileString.trim().split(/\\r?\\n/);\r\n        // Basic header check\r\n        if (rawLines.length === 0 || rawLines[0].trim() !== \";paint.net Palette File\")\r\n            html.ErrorCallBack(\"@PaintParser : File invalid, does not start with ';paint.net Palette File' marker.\");\r\n        // Normalize lines: trim whitespace\r\n        const lines = rawLines.map(l => l.trim());\r\n        // Helper to get the value after a `;Key: value` line\r\n        const readMeta = (key: string): string | null => {\r\n            const pref = `;${key}:`;\r\n            const line = lines.find(l => l.toLowerCase().startsWith(pref.toLowerCase()));\r\n            if (!line) return null;\r\n            return line.slice(pref.length).trim();\r\n        };\r\n        // Palette name\r\n        const name = readMeta(\"Palette Name\") ?? \"\";\r\n        if (!name)\r\n            html.ErrorCallBack(\"@PaintParser : File invalid, does not have a palette name.\");\r\n        // Colors count\r\n        const colorsStr = readMeta(\"Colors\");\r\n        if (!colorsStr)\r\n            html.ErrorCallBack(\"@PaintParser : File invalid, does not have a ';Colors: <n>' line.\");\r\n        const size = parseInt(colorsStr as string, 10);\r\n        if (!Number.isFinite(size) || size <= 0)\r\n            html.ErrorCallBack(\"@PaintParser : Colors count is not a positive integer.\");\r\n        // Collect color lines: non-empty, not starting with ';'\r\n        const colorLines = lines.filter(l => l && !l.startsWith(\";\"));\r\n        // The color lines usually appear after the metadata; keep only 8-hex-digit tokens\r\n        const hex8 = /^[0-9a-fA-F]{8}$/;\r\n        const hexColors = colorLines.filter(l => hex8.test(l));\r\n        if (hexColors.length < size)\r\n            html.ErrorCallBack(`@PaintParser : Declared ${size} colors but found only ${hexColors.length} color entries.`);\r\n        const rgba: RGBA[] = new Array(size);\r\n        let buffer: Uint8Array = new Uint8Array(size * 4);\r\n        for (let i = 0; i < size; i++) {\r\n            const hex = hexColors[i];\r\n            const v = parseInt(hex, 16);\r\n            const a = (v >>> 24) & 0xFF;\r\n            const r = (v >>> 16) & 0xFF;\r\n            const g = (v >>> 8) & 0xFF;\r\n            const b = v & 0xFF;\r\n\r\n            const rgbaCheck = [r, g, b, a];\r\n            if (!isRGBA(rgbaCheck)) html.ErrorCallBack(`@PaintParser : Entry ${i} is not a valid RGBA value.`);\r\n            rgba[i] = rgbaCheck as RGBA;\r\n            buffer = createBuffer(rgba[i], buffer, i);\r\n        }\r\n\r\n        return { name, names: [], rgba, buffer, size };\r\n    };\r\n\r\n    private GPLParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@GPLParser : A image result was passed, This should not happen.\");\r\n        const res = result as TextFileResult;\r\n        const lines = res.fileString.trim().split(/\\r?\\n/);\r\n        if (lines[0] !== \"GIMP Palette\")\r\n            html.ErrorCallBack(\"@GPLParser  : A file invalid, does not start with 'GIMP Palette' Marker.\");\r\n        let tmp: string[] = lines[1].split(/:\\s*/);\r\n        if (tmp.length != 2)\r\n            html.ErrorCallBack(\"@GPLParser : A file invalid, does not have a palette name.\");\r\n        // we can skip 2\r\n        const name: string = tmp[1];\r\n        tmp = lines[3].split(/:\\s*/);\r\n        if (tmp.length != 2)\r\n            html.ErrorCallBack(\"@GPLParser : A file invalid, does not have a number of colors in the palette.\");\r\n        const size = parseInt(tmp[1]);\r\n        const rgba: RGBA[] = new Array(size);\r\n        let buffer: Uint8Array = new Uint8Array(size * 4);\r\n        for (let i = 0; i < size; i++) {\r\n            const current = lines[4 + i];\r\n            const numbers = current.split(/\\s+/);\r\n            const rgbaCheck = [parseInt(numbers[0]), parseInt(numbers[1]), parseInt(numbers[2]), 255];\r\n            if (!isRGBA(rgbaCheck)) html.ErrorCallBack(\"@GPLParser : entry is not a RGBA value\");\r\n            rgba[i] = rgbaCheck as RGBA\r\n            buffer = createBuffer(rgba[i], buffer, i)\r\n        }\r\n\r\n        return { name: name, names: [], rgba, buffer, size };\r\n    }\r\n\r\n    private JASCParser: Parser = (result: FileResult, html: HTMLElements) => {\r\n        if (!isTextFileResult(result))\r\n            html.ErrorCallBack(\"@JASCParser : A image result was passed, This should not happen.\");\r\n        const res = result as TextFileResult;\r\n        const lines = res.fileString.trim().split(/\\r?\\n/);\r\n        if (lines[0] !== \"JASC-PAL\")\r\n            html.ErrorCallBack(\"@JASCParser : A file invalid, does not start with JASC-PAL Marker.\");\r\n        if (lines[1] !== \"0100\")\r\n            html.ErrorCallBack(\"@JASCParser : A file invalid, not correct version 0100.\");\r\n        const size = parseInt(lines[2]);\r\n        const rgba: RGBA[] = new Array(size);\r\n        let buffer: Uint8Array = new Uint8Array(size * 4);\r\n        for (let i = 0; i < size; i++) {\r\n            const currentLine = lines[3 + i];\r\n            const numbers = currentLine.split(/\\s+/);\r\n            const rgbaCheck = [parseInt(numbers[0]), parseInt(numbers[1]), parseInt(numbers[2]), 255];\r\n            if (!isRGBA(rgbaCheck)) html.ErrorCallBack(\"@JASCParser : entry is not a RGBA value\");\r\n            rgba[i] = rgbaCheck as RGBA\r\n            buffer = createBuffer(rgba[i], buffer, i)\r\n        }\r\n\r\n        return { name: \"\", names: [], rgba, buffer, size };\r\n    }\r\n\r\n    private readonly parserByExt = new Map<string, Parser>([\r\n        [\"json\", this.JSONParser],\r\n        [\"hex\", this.HEXParser],\r\n        [\"gpl\", this.GPLParser],\r\n        [\"pal\", this.JASCParser],\r\n        [\"txt\", this.PaintParser], // for now\r\n    ]);\r\n\r\n    public getParser = (ext: string): Parser | undefined => this.parserByExt.get(ext);\r\n\r\n};","import { ImageFileResult, TextFileResult } from \"../Application/FileHandler\";\r\nimport { FileResult, isImageFileResult, PaletteParsers, Parser } from \"./PaletteParsers\";\r\nimport { HTMLElements } from \"../Application/HtmlElements\";\r\nimport { EmptyPalette, Palette} from \"./Palette\";\r\n\r\n\r\n// Classes: \r\nexport class PaletteFactory {\r\n    private parsers: PaletteParsers = new PaletteParsers();\r\n    // Public Methods\r\n    public CreatePalette(result: FileResult, html:HTMLElements): Palette {\r\n        if (isImageFileResult(result)) {\r\n            const res = result as ImageFileResult;\r\n            // TODO: Add Image Palette Loading\r\n            return EmptyPalette;\r\n        }\r\n        const res: TextFileResult = result as TextFileResult;\r\n        const extension: string = res.fileName.includes(\".\")\r\n            ? res.fileName.split(\".\").pop()!.toLowerCase()\r\n            : \"\";\r\n\r\n        let tmp: Parser | undefined = this.parsers.getParser(extension);\r\n        if (tmp == undefined) \r\n            html.ErrorCallBack(`@PaletteFactory : We don't have a parser for this extension '${extension}'..`)\r\n        \r\n        const parser: Parser = tmp as Parser;\r\n        \r\n        // Call it\r\n        return parser(result, html);\r\n    }\r\n\r\n    public CreateDefaultPalette(str: string, html:HTMLElements): Palette {\r\n        let res : TextFileResult = {fileName: \"Default\", fileString: str} \r\n        return (this.parsers.getParser(\"json\") as Parser)(res, html);\r\n    }\r\n};\r\n\r\n","// Class to hold HTML Elements of a page.. \r\n// Singleton because we only have one page, might as well manage the state globally\r\nexport class HTMLElements {\r\n    // HTMLInputElements\r\n    public fileIO: HTMLInputElement = fetchDoc<HTMLInputElement>('#file');\r\n    public paletteFileIO: HTMLInputElement = fetchDoc<HTMLInputElement>('#palette-file');\r\n\r\n    // HTMLButtonElement\r\n    public runBtn: HTMLButtonElement = fetchDoc<HTMLButtonElement>('#run');\r\n\r\n    // HTMLImageElements\r\n    public orgImgElem: HTMLImageElement = fetchDoc<HTMLImageElement>('#original');\r\n\r\n    // HTMLAnchorElements\r\n    public downloadBtn: HTMLAnchorElement = fetchDoc<HTMLAnchorElement>('#download');\r\n\r\n    // HTMLElements\r\n    public logElem: HTMLElement = fetchDoc<HTMLElement>('#log');\r\n    public statusElem: HTMLElement = fetchDoc<HTMLElement>('#status');\r\n    public paletteGrid: HTMLElement = fetchDoc<HTMLElement>('#palette-grid');\r\n    public originalCol: HTMLElement = fetchDoc<HTMLElement>('#original-col');\r\n    public processedCol: HTMLElement = fetchDoc<HTMLElement>('#processed-col');\r\n    public paletteGridElem: HTMLElement = fetchDoc<HTMLElement>(\"#palette-grid\");\r\n    public paletteViewElem: HTMLElement = fetchDoc<HTMLElement>('#palette-view');\r\n    public paletteUploadElem: HTMLElement = fetchDoc<HTMLElement>('#palette-file-upload');\r\n\r\n    // HTMLSelectElements\r\n    public filterSelector: HTMLSelectElement = fetchDoc<HTMLSelectElement>('#filter-mode');\r\n    public paletteSelector: HTMLSelectElement = fetchDoc<HTMLSelectElement>('#palette-selector');\r\n\r\n    // Toggles for visibility \r\n    public toggleHiddenOriginalCol = (b: boolean) => (b) ? this.originalCol.classList.add(\"hidden\") : this.originalCol.classList.remove(\"hidden\");\r\n    public toggleHiddenPaletteView = (b: boolean) => (b) ? this.paletteViewElem.classList.add(\"hidden\") : this.paletteViewElem.classList.remove(\"hidden\");\r\n    public toggleHiddenProcessedCol = (b: boolean) => (b) ? this.processedCol.classList.add(\"hidden\") : this.processedCol.classList.remove(\"hidden\");\r\n    public toggleHiddenPaletteFileUpload = (b: boolean) => (b) ? this.paletteUploadElem.classList.add(\"hidden\") : this.paletteUploadElem.classList.remove(\"hidden\");\r\n\r\n    // Setting status and log Error logs\r\n    public setStatus = (m: string) => this.statusElem.textContent = m;\r\n    public logError = (m: string) => this.logElem.textContent = m || '';\r\n\r\n    // Error call back for HTML Elements\r\n    public ErrorCallBack = (m: string) => {\r\n        this.logError(m);\r\n        throw new Error(m);\r\n    }\r\n\r\n    // Singleton getInstance function\r\n    public static getInstance(): HTMLElements {\r\n        if (!this.instance) this.instance = new HTMLElements();\r\n        return this.instance;\r\n    }\r\n\r\n    // Instance of HTMLElements\r\n    private static instance: HTMLElements;\r\n\r\n    // On page load.. hide the following.. \r\n    private constructor() {\r\n        this.toggleHiddenOriginalCol(true);\r\n        this.toggleHiddenPaletteView(true);\r\n        this.toggleHiddenProcessedCol(true);\r\n        this.toggleHiddenPaletteFileUpload(true);\r\n\r\n        // Default filter is none selected.. \r\n        this.filterSelector.selectedIndex = 0;\r\n        // Ditto with palettes\r\n        this.paletteSelector.selectedIndex = 0;\r\n    }\r\n}\r\n\r\n// Fetches from the document using the query selector\r\nexport const fetchDoc = <Type>(selector: string): Type => {\r\n    return document.querySelector(selector) as Type;\r\n}\r\n\r\n// Type for error callbacks.. \r\nexport type OnError = (msg: string) => void;","import { HTMLElements } from \"./HtmlElements\";\r\n\r\nexport interface ImageFileResult {\r\n    imageBitMap: ImageBitmap,\r\n    fileName: string,\r\n    width: number,\r\n    height: number,\r\n};\r\n\r\nexport interface TextFileResult {\r\n    fileName: string,\r\n    fileString: string,\r\n};\r\n\r\nexport class FileHandler {\r\n    public static readImage(file: File, html: HTMLElements): Promise<ImageFileResult> {\r\n        return new Promise((resolve, reject) => {\r\n            html.logError('');\r\n            html.setStatus('Loading image..');\r\n\r\n            createImageBitmap(file, { imageOrientation: \"from-image\" })\r\n                .then((bmp) => {\r\n                    const result: ImageFileResult = {\r\n                        imageBitMap: bmp,\r\n                        fileName: file.name,\r\n                        width: bmp.width,\r\n                        height: bmp.height\r\n                    };\r\n\r\n                    // Preview the original file\r\n                    html.orgImgElem.src = URL.createObjectURL(file);\r\n\r\n                    // Enable run button\r\n                    html.runBtn.disabled = false;\r\n                    html.setStatus(\r\n                        `Image loaded: ${bmp.width}x${bmp.height}. Click \"Run Shader\".`\r\n                    );\r\n\r\n                    html.toggleHiddenOriginalCol(false);\r\n                    resolve(result);\r\n                })\r\n                .catch((e) => {\r\n                    html.runBtn.disabled = true;\r\n                    html.ErrorCallBack(\"@ handleFileIO :\\n\" + e);\r\n                    reject(e);\r\n                });\r\n        });\r\n    };\r\n\r\n    public static readFile(file: File, HTML: HTMLElements): Promise<TextFileResult> {\r\n        return new Promise((resolve, reject) => {\r\n            HTML.logError('');\r\n            HTML.setStatus('Loading text file..');\r\n\r\n            // Wrap FileReader in a temporary promise\r\n            const readerPromise = new Promise<string>((res, rej) => {\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = () => res(reader.result as string);\r\n                reader.onerror = () => rej(reader.error);\r\n\r\n                reader.readAsText(file);\r\n            });\r\n\r\n            readerPromise\r\n                .then((text) => {\r\n                    const result: TextFileResult = {\r\n                        fileName: file.name,\r\n                        fileString: text\r\n                    };\r\n\r\n                    HTML.setStatus(`File loaded: ${file.name} (${file.size} bytes)`);\r\n                    resolve(result);\r\n                })\r\n                .catch((e) => {\r\n                    HTML.runBtn.disabled = true;\r\n                    HTML.ErrorCallBack(\"@ handleFileIO :\\n\" + e);\r\n                    reject(e);\r\n                });\r\n        });\r\n    };\r\n};","import { OnError } from \"../Application/HtmlElements\";\r\nimport { Palette } from \"../Palettes/Palette\"\r\n\r\n// Create the texture from image bitmap\r\nexport const createTextureFromBitmap = (bmp: ImageBitmap, gl: WebGL2RenderingContext, onError?: OnError): WebGLTexture => {\r\n    const texture: WebGLTexture = gl.createTexture();\r\n    if (!texture) onError?.(\"@ createTextureFromBitmap : gl.createTexture:\");\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1)\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bmp);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n    return texture;\r\n}\r\n\r\n// Creating a texture for the Palette to allow reads from it like a buffer. \r\nexport const createPaletteTexture = (palette: Palette, gl: WebGL2RenderingContext, onError?: OnError): WebGLTexture => {\r\n    const texture: WebGLTexture = gl.createTexture();\r\n    if (!texture) onError?.(\"@ createPaletteTexture : gl.createTexture:\");\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA8, palette.buffer.length / 4, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, palette.buffer);\r\n\r\n    return texture;\r\n}\r\n\r\n","import { HTMLElements } from \"../Application/HtmlElements\";\r\nimport { Palette } from \"./Palette\";\r\n\r\n// Render the Palette to the HTML  \r\nexport const renderPalette = (palette: Palette, HTML: HTMLElements) => {\r\n    if (!HTML.paletteGridElem) {\r\n        HTML.ErrorCallBack(\"@ renderPalette: #palette-grid not found in DOM\");\r\n        return;\r\n    }\r\n    HTML.paletteGridElem.setAttribute(\"data-palette\", \"\");\r\n    HTML.paletteGridElem.innerHTML = \"\";\r\n\r\n    const title = document.createElement(\"div\");\r\n    title.className = \"pv-title\";\r\n    title.textContent = palette.name;\r\n    HTML.paletteGridElem.appendChild(title);\r\n\r\n    const grid = document.createElement(\"div\");\r\n    grid.className = \"pv-grid\";\r\n    HTML.paletteGridElem.appendChild(grid);\r\n\r\n    for (let i = 0; i < palette.rgba.length; i++) {\r\n        const name = palette.names[i];\r\n        const [r, g, b, a] = palette.rgba[i];\r\n\r\n        const item = document.createElement(\"button\");\r\n        item.type = \"button\";\r\n        item.className = \"pv-item\";\r\n        item.title = `${name} — rgba(${r}, ${g}, ${b}, ${a})`;\r\n        item.style.background = `rgba(${r}, ${g}, ${b}, ${a / 255})`;\r\n\r\n        item.addEventListener(\"click\", async () => {\r\n            const css = `rgba(${r}, ${g}, ${b}, ${(a / 255).toFixed(3)})`;\r\n            try { await navigator.clipboard.writeText(css); } catch { }\r\n        });\r\n\r\n        grid.appendChild(item);\r\n    }\r\n    HTML.toggleHiddenPaletteView(false);\r\n};\r\n\r\n// Clear the Palette\r\n// Clear just the palette items (not the entire container)\r\nexport const clearPalette = (HTML: HTMLElements) => {\r\n    if (!HTML.paletteGridElem) {\r\n        HTML.ErrorCallBack(\"@ clearPalette: #palette-grid not found in DOM\");\r\n        return;\r\n    }\r\n\r\n    const grid = HTML.paletteGridElem.querySelector(\".pv-grid\");\r\n    if (grid) {\r\n        grid.innerHTML = \"\"; // clear only the swatches\r\n    }\r\n\r\n    const title = HTML.paletteGridElem.querySelector(\".pv-title\");\r\n    if (title) {\r\n        title.textContent = \"\";\r\n    }\r\n};\r\n","import colorSpaceURL from \"../Shaders/colorSpace.fs.glsl\"\r\nimport defaultVertURL from \"../Shaders/default.vs.glsl\"\r\nimport invertFragURL from \"../Shaders/invert.fs.glsl\"\r\nimport { OnError } from \"../Application/HtmlElements\";\r\n\r\n// Class for GLShaders.. really just a struct \r\nexport class GLShader {\r\n  public program: WebGLProgram;\r\n  public uniforms: Record<string, WebGLUniformLocation | null> = {};\r\n  public vao: WebGLVertexArrayObject | null = null;\r\n  public attributes: Record<string, GLint | null> = {};\r\n  public constructor(vsSrc: string = '', fsSrc: string = '', gl: WebGL2RenderingContext, onError?: OnError) {\r\n    this.program = createShaderProgram(vsSrc, fsSrc, gl, onError)\r\n  }\r\n};\r\n\r\n// Gets the uniform from the shader\r\nconst getUniform = (gl: WebGL2RenderingContext, prog: GLShader, name: string, onError?: OnError) => {\r\n  const loc = gl.getUniformLocation(prog.program, name);\r\n  if (loc === null) {\r\n    onError && onError(\"@ getUniform : uniform \" + name + \" not found or optimized out\");\r\n  }\r\n  prog.uniforms[name] = loc;\r\n};\r\n\r\n// Gets the attribute from the shader\r\nconst getAttrib = (gl: WebGL2RenderingContext, prog: GLShader, name: string, onError?: OnError) => {\r\n  const loc = gl.getAttribLocation(prog.program, name);\r\n  if (loc === -1) {\r\n    onError && onError(\"@ getAttrib : attribute \" + name + \" not found or optimized out\");\r\n  }\r\n  prog.attributes[name] = loc;\r\n};\r\n\r\n// Create a shader program\r\nconst createShaderProgram = (vsSrc: string = '', fsSrc: string = '', gl: WebGL2RenderingContext, onError?: OnError) => {\r\n  // IF we are not loading custom shaders.. \r\n  if (vsSrc.length == 0) vsSrc = defaultVertURL;\r\n  if (fsSrc.length == 0) fsSrc = invertFragURL;\r\n\r\n  const vs: WebGLShader = compileShader(vsSrc, gl.VERTEX_SHADER, gl, onError);\r\n  const fs: WebGLShader = compileShader(fsSrc, gl.FRAGMENT_SHADER, gl, onError);\r\n\r\n  const pg: WebGLProgram | null = gl.createProgram();\r\n  if (!pg) onError?.(\"@ createShaderProgram : gl.createProgram:\");\r\n\r\n  const program: WebGLProgram = pg as WebGLProgram;\r\n\r\n  gl.attachShader(program, vs);\r\n  gl.attachShader(program, fs);\r\n  gl.linkProgram(program);\r\n\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const info = gl.getProgramInfoLog(program) ?? \"Unknown shader error\";\r\n    gl.deleteProgram(program);\r\n    onError?.(\"@ createShaderProgram : gl.linkProgram:\\n\" + info);\r\n  }\r\n\r\n  return program;\r\n}\r\n\r\n// Compile shader helper \r\nconst compileShader = (src: string, type: number, gl: WebGL2RenderingContext, onError?: OnError) => {\r\n  const sh: WebGLShader | null = gl.createShader(type);\r\n  if (!sh) onError?.(\"@ compileShader : gl.createShaderFailed\");\r\n\r\n  const shader: WebGLShader = sh as WebGLShader;\r\n  gl.shaderSource(shader, src);\r\n  gl.compileShader(shader)\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const info = gl.getShaderInfoLog(shader) ?? \"Unknown shader error\";\r\n    gl.deleteShader(shader);\r\n    onError?.(\"@ compileShader : gl.compileShader:\\n\" + info)\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n// Set up the vertex array objects \r\nexport const setupVAO = (gl: WebGL2RenderingContext, prog: GLShader, quadBuffer: WebGLBuffer, onError?: OnError): void => {\r\n  const vao = gl.createVertexArray();\r\n  if (!vao) {\r\n    onError?.(\"@ setupVAO : failed to create VAO\");\r\n    return;\r\n  }\r\n\r\n  gl.bindVertexArray(vao);\r\n  gl.useProgram(prog.program);\r\n\r\n  const posLoc = prog.attributes[\"a_position\"] as number;\r\n  if (posLoc === undefined || posLoc === -1) {\r\n    onError?.(\"@ getAttrib : attribute a_position not found or optimized out\");\r\n  } else {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, quadBuffer);\r\n    gl.enableVertexAttribArray(posLoc);\r\n    gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n  }\r\n\r\n  gl.bindVertexArray(null);\r\n  prog.vao = vao;\r\n};\r\n\r\n// Setup shaders for the program\r\nexport const setupShaders = (gl: WebGL2RenderingContext, onError?: OnError): GLShader[] => {\r\n  // ColorSpace\r\n  const colorSpaceProg = new GLShader('', colorSpaceURL, gl, onError);\r\n  gl.useProgram(colorSpaceProg.program);\r\n  getUniform(gl, colorSpaceProg, \"u_image\", onError);\r\n  getUniform(gl, colorSpaceProg, \"u_palette\", onError);\r\n  getUniform(gl, colorSpaceProg, \"u_paletteSize\", onError);\r\n  getAttrib(gl, colorSpaceProg, \"a_position\", onError);\r\n\r\n\r\n  gl.uniform1i(colorSpaceProg.uniforms['u_image'], 0);\r\n  gl.uniform1i(colorSpaceProg.uniforms['u_palette'], 1);\r\n\r\n  // Invert\r\n  const invertProg = new GLShader('', '', gl, onError);\r\n  gl.useProgram(invertProg.program);\r\n  getUniform(gl, invertProg, \"u_image\", onError);\r\n  getAttrib(gl, invertProg, \"a_position\", onError);\r\n\r\n  gl.uniform1i(invertProg.uniforms['u_image'], 0);\r\n  gl.useProgram(null)\r\n  return [invertProg, colorSpaceProg];\r\n}\r\n","import { createPaletteTexture, createTextureFromBitmap } from \"../GL/GLHelpers\"\r\nimport { defaultPalette, Palette } from \"../Palettes/Palette\";\r\nimport { clearPalette, renderPalette } from \"../Palettes/PaletteElements\";\r\nimport { GLShader, setupShaders, setupVAO } from \"../GL/GLShader\"\r\nimport { HTMLElements, fetchDoc } from \"../Application/HtmlElements\";\r\nimport { ImageFileResult } from \"../Application/FileHandler\";\r\nimport { PaletteFactory } from \"../Palettes/PalletteFactory\";\r\n\r\n// Singleton manager class for the GLcanvas\r\nexport class GLManagement {\r\n    // Member variables\r\n\r\n    // Public\r\n    public canvas: HTMLCanvasElement = fetchDoc<HTMLCanvasElement>('#glcanvas') as HTMLCanvasElement;\r\n    public gl: WebGL2RenderingContext = this.canvas.getContext('webgl2') as WebGL2RenderingContext;\r\n    public imageBitmap: ImageBitmap | null = null;\r\n    public shaderProgs: GLShader[] = []\r\n\r\n    public runProg(): void {\r\n        const gl = this.gl\r\n        const html = this.html\r\n        const shaderSelect = this.shaderSelect;\r\n        const shader = this.shaderProgs[shaderSelect];\r\n\r\n        if (!this.imageBitmap) {\r\n            html.setStatus(\"Please upload an image first.\");\r\n            return;\r\n        }\r\n\r\n        if (shaderSelect < 0) {\r\n            html.setStatus(\"Please select a filter first\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!shader || !shader.uniforms) throw new Error(\"Program not initialized\");\r\n            const tex = createTextureFromBitmap(this.imageBitmap, gl, this.html.ErrorCallBack);\r\n            let selectedPalette = this.programPalettes[this.paletteIdx];\r\n            console.log(this.programPalettes[this.paletteIdx]);\r\n            console.log(this.paletteIdx)\r\n            console.log(this.programPalettes)\r\n            if (selectedPalette == undefined && shaderSelect == 1) {\r\n                html.setStatus(\"Please select a palette\");\r\n                return;\r\n            }\r\n            let palette: WebGLTexture | null = null;\r\n\r\n            gl.useProgram(shader.program);\r\n            gl.bindVertexArray(shader.vao);\r\n\r\n            if (selectedPalette) {\r\n                palette = createPaletteTexture(selectedPalette as Palette, gl, this.html.ErrorCallBack);\r\n                gl.activeTexture(gl.TEXTURE1)\r\n                gl.bindTexture(gl.TEXTURE_2D, palette);\r\n                if (shader.uniforms[\"u_palette\"]) gl.uniform1i(shader.uniforms[\"u_palette\"], 1);\r\n                if (shader.uniforms[\"u_paletteSize\"]) gl.uniform1i(shader.uniforms[\"u_paletteSize\"], selectedPalette.size);\r\n            }\r\n\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, tex);\r\n            // set the source image.. \r\n            if (shader.uniforms[\"u_image\"]) gl.uniform1i(shader.uniforms[\"u_image\"], 0);\r\n\r\n            gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n            gl.bindVertexArray(null);\r\n            this.canvas.toBlob(\r\n                (blob) => {\r\n                    if (!blob) return;\r\n                    const url = URL.createObjectURL(blob);\r\n                    html.downloadBtn.href = url;\r\n                    html.downloadBtn.classList.remove(\"hidden\");\r\n                },\r\n                \"image/png\"\r\n            );\r\n\r\n            html.setStatus(\"Done! Shader result shown. Download available.\");\r\n            html.toggleHiddenProcessedCol(false);\r\n            gl.deleteTexture(tex);\r\n            if (selectedPalette) gl.deleteTexture(palette)\r\n        } catch (e) {\r\n            html.ErrorCallBack(\"@ runProg : \\n\" + e);\r\n        }\r\n    }\r\n\r\n    public setImageProperties(result: ImageFileResult): void {\r\n        this.imageBitmap = result.imageBitMap;\r\n        this.canvas.width = result.width;\r\n        this.canvas.height = result.height;\r\n    }\r\n\r\n    public addPalette(result: Palette): void {\r\n        this.programPalettes[1] = (result);\r\n        renderPalette(this.programPalettes[this.paletteIdx], this.html)\r\n    }\r\n\r\n    public setShaderSelection(idx: number): void {\r\n        const html = this.html;\r\n        if (idx < 0) {\r\n            html.setStatus(\"Please Select a filter to use\")\r\n        }\r\n        if (idx == 1 && this.programPalettes) {\r\n            html.toggleHiddenPaletteView(false);\r\n            // renderPalette(this.selectedPalette as Palette, this.html)\r\n        } else html.toggleHiddenPaletteView(true);\r\n\r\n        this.shaderSelect = idx;\r\n    }\r\n\r\n    public setPalette(idx: number): void {\r\n        const html = this.html;\r\n        this.paletteIdx = idx;\r\n        clearPalette(html);\r\n        if (this.programPalettes[this.paletteIdx] == undefined) {\r\n            html.setStatus(\"Please upload a palette\");\r\n            return;\r\n        }\r\n        renderPalette(this.programPalettes[this.paletteIdx], this.html)\r\n    }\r\n\r\n    // Private\r\n    private shaderSelect: number = -1;\r\n    private programPalettes: Palette[] = [];\r\n    private paletteIdx: number = -1;\r\n    private static instance: GLManagement;\r\n    private html: HTMLElements = HTMLElements.getInstance() as HTMLElements;\r\n    private paletteFactory: PaletteFactory = new PaletteFactory();\r\n\r\n    // Methods\r\n    public static getInstance(): GLManagement {\r\n        if (!GLManagement.instance) GLManagement.instance = new GLManagement();\r\n        return GLManagement.instance;\r\n    }\r\n\r\n    // On Dom load.. \r\n    private constructor() {\r\n        const gl = this.gl;\r\n        const html = this.html;\r\n        const f = this.paletteFactory;\r\n\r\n        if (!gl) {\r\n            html.setStatus('WebGL is not supported in this browser, this app will not work. Please use a browser that allows WebGL');\r\n            html.runBtn.disabled = true;\r\n        }\r\n        const p = f.CreateDefaultPalette(defaultPalette, html);\r\n        this.programPalettes.push(p);\r\n        this.shaderProgs = setupShaders(gl, html.ErrorCallBack);\r\n\r\n        // quad buffer\r\n        const quadBuffer = gl.createBuffer();\r\n        if (!quadBuffer) throw new Error(\"createBuffer failed\");\r\n\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, quadBuffer);\r\n        gl.bufferData(\r\n            gl.ARRAY_BUFFER,\r\n            new Float32Array([\r\n                -1, -1, 1, -1, -1, 1, // tri 1\r\n                1, -1, 1, 1, -1, 1, // tri 2\r\n            ]),\r\n            gl.STATIC_DRAW\r\n        );\r\n\r\n        this.shaderProgs.forEach(element => {\r\n            setupVAO(gl, element, quadBuffer as WebGLBuffer, html.ErrorCallBack);\r\n        });\r\n    }\r\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { PaletteFactory } from \"./Palettes/PalletteFactory\";\r\nimport { HTMLElements } from \"./Application/HtmlElements\";\r\nimport { FileHandler } from \"./Application/FileHandler\";\r\nimport { GLManagement } from \"./GL/GLManagement\";\r\n\r\nimport \"./style.css\";\r\n\r\n\r\nconst application = () => {\r\n    // Just get our singletons.. \r\n    const manager = GLManagement.getInstance();\r\n    const html = HTMLElements.getInstance();\r\n    const paletteFactory = new PaletteFactory(); \r\n    // File IO stuff\r\n    html.fileIO.addEventListener(\"change\", async () => {\r\n        html.toggleHiddenProcessedCol(true);\r\n        const f = html.fileIO.files?.[0];\r\n        if (!f) return;\r\n        const result = await FileHandler.readImage(f, html);\r\n        manager.setImageProperties(result);\r\n\r\n    });\r\n\r\n    html.paletteFileIO.addEventListener(\"change\", async () => {\r\n        const f = html.paletteFileIO.files?.[0];\r\n        if (!f) return;\r\n        const result = await FileHandler.readFile(f, html);\r\n        console.log(result);\r\n\r\n        const palette = paletteFactory.CreatePalette(result, html);\r\n        manager.addPalette(palette);\r\n    })\r\n\r\n    html.runBtn.addEventListener(\"click\", () => manager.runProg());\r\n\r\n    html.filterSelector.addEventListener('change', (event) => {\r\n        const selection = event.target as HTMLSelectElement;\r\n        manager.setShaderSelection(selection.selectedIndex - 1);\r\n    });\r\n\r\n    html.paletteSelector.addEventListener('change', (event) => {\r\n        const selection = event.target as HTMLSelectElement;\r\n        if (selection.value === \"Custom\") {\r\n            html.toggleHiddenPaletteFileUpload(false);\r\n        }\r\n        else html.toggleHiddenPaletteFileUpload(true);\r\n        console.log(selection.selectedIndex - 1);\r\n        manager.setPalette(selection.selectedIndex - 1);\r\n    });\r\n}\r\n\r\n// A way to load the main function when the DOM loads.. \r\ndocument.addEventListener(\"DOMContentLoaded\", application);"],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","___CSS_LOADER_EXPORT___","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","EmptyPalette","name","names","rgba","buffer","Uint8Array","size","isUint8","v","Number","isInteger","isRGBA","x","Array","isArray","every","createBuffer","buff","idx","stride","isTextFileResult","PaletteParsers","JSONParser","html","ErrorCallBack","res","raw","paletteName","parse","fileString","fileName","entries","entry","rgbaCheck","ASEParser","HEXParser","lines","trim","split","l","filter","startsWith","hex6","hexColors","test","token","replace","parseInt","slice","IMGParser","PaintParser","rawLines","readMeta","pref","line","find","toLowerCase","colorsStr","isFinite","colorLines","hex8","hex","GPLParser","tmp","numbers","JASCParser","parserByExt","Map","getParser","ext","PaletteFactory","parsers","CreatePalette","extension","includes","pop","CreateDefaultPalette","str","HTMLElements","getInstance","instance","fileIO","fetchDoc","paletteFileIO","runBtn","orgImgElem","downloadBtn","logElem","statusElem","paletteGrid","originalCol","processedCol","paletteGridElem","paletteViewElem","paletteUploadElem","filterSelector","paletteSelector","toggleHiddenOriginalCol","b","classList","add","toggleHiddenPaletteView","toggleHiddenProcessedCol","toggleHiddenPaletteFileUpload","setStatus","m","textContent","logError","selectedIndex","selector","FileHandler","readImage","file","Promise","resolve","reject","createImageBitmap","imageOrientation","then","bmp","imageBitMap","width","height","src","URL","createObjectURL","disabled","catch","readFile","HTML","rej","reader","FileReader","onload","onerror","error","readAsText","text","renderPalette","palette","innerHTML","title","className","grid","r","g","type","background","addEventListener","async","toFixed","navigator","clipboard","writeText","GLShader","vsSrc","fsSrc","gl","onError","uniforms","vao","program","createShaderProgram","getUniform","prog","loc","getUniformLocation","getAttrib","getAttribLocation","vs","compileShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","pg","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","info","getProgramInfoLog","deleteProgram","sh","createShader","shader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","GLManagement","runProg","shaderSelect","shaderProgs","imageBitmap","tex","texture","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createTextureFromBitmap","selectedPalette","programPalettes","paletteIdx","console","log","useProgram","bindVertexArray","UNPACK_ALIGNMENT","NEAREST","RGBA8","createPaletteTexture","activeTexture","TEXTURE1","uniform1i","TEXTURE0","viewport","canvas","drawArrays","TRIANGLES","toBlob","blob","url","href","deleteTexture","setImageProperties","addPalette","setShaderSelection","setPalette","clearPalette","getContext","paletteFactory","f","p","colorSpaceProg","invertProg","setupShaders","quadBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","forEach","createVertexArray","posLoc","enableVertexAttribArray","vertexAttribPointer","FLOAT","setupVAO","locals","manager","files","event","selection","value"],"sourceRoot":""}